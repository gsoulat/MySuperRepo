---
- name: Récupérer la clé publique du dépôt
  uri:
    url: "https://api.github.com/repos/{{ GITHUB_USER }}/{{ REPO_NAME }}/actions/secrets/public-key"
    method: GET
    headers:
      Authorization: "Bearer {{ GITHUB_TOKEN }}"
      Accept: "application/vnd.github.v3+json"
    status_code: 200
  register: public_key_response

- name: Lire le contenu de la clé SSH privée
  slurp:
    src: "{{ PRIVATE_KEY | expanduser }}"
  register: ssh_key_content

- name: Formater la clé SSH
  set_fact:
    formatted_ssh_key: "{{ ssh_key_content['content'] | b64decode | replace('\n', '\\n') }}"

- name: Créer un script Python temporaire pour le chiffrement
  template:
    src: encrypt_script.py.j2
    dest: "{{ playbook_dir }}/encrypt_secret.py"
    mode: "0700"
  register: encrypt_script

- name: Installer les dépendances Python requises
  pip:
    name:
      - pynacl
      - cryptography
    state: present

- name: Préparer le dictionnaire des secrets
  set_fact:
    secrets_to_add:
      SERVER_IP: "{{ SERVER_IP }}"
      DOMAIN_NAME: "{{ DOMAIN_NAME }}"
      HOST: "{{ HOST }}"
      SSH_PRIVATE_KEY: "{{ formatted_ssh_key }}"
      sshd_config_path: "{{ sshd_config_path }}"
      cloud_init_sshd_config_path: "{{ cloud_init_sshd_config_path }}"
      ssh_key_types: "{{ ssh_key_types }}"

- name: Chiffrer et ajouter chaque secret
  uri:
    url: "https://api.github.com/repos/{{ GITHUB_USER }}/{{ REPO_NAME }}/actions/secrets/{{ item.key }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ GITHUB_TOKEN }}"
      Accept: "application/vnd.github.v3+json"
    body_format: json
    body:
      encrypted_value: '{{ lookup(''pipe'', ''python3 '' + encrypt_script.dest + '' "'' + public_key_response.json.key + ''" "'' + item.value + ''"'') }}'
      key_id: "{{ public_key_response.json.key_id }}"
    status_code: [201, 204]
  loop: "{{ secrets_to_add | dict2items }}"
  no_log: true

- name: Supprimer le script Python temporaire
  file:
    path: "{{ playbook_dir }}/encrypt_secret.py"
    state: absent
